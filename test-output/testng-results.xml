<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="14" passed="12" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-25T17:57:38 IST" name="Default suite" finished-at="2022-03-25T18:11:22 IST" duration-ms="824830">
    <groups>
    </groups>
    <test started-at="2022-03-25T17:57:38 IST" name="Default test" finished-at="2022-03-25T18:11:22 IST" duration-ms="824830">
      <class name="com.qt.qualithon.test.MovieSearchTest">
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T17:57:38 IST" name="testSessionSetUp" finished-at="2022-03-25T17:57:42 IST" duration-ms="4480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectDirectorName(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T17:57:42 IST" name="testMovieMetadataOnWebHasCorrectDirectorName" data-provider="popularMovieTitles" finished-at="2022-03-25T17:59:04 IST" duration-ms="82082" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectDirectorName -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T17:59:04 IST" name="testTearDown" finished-at="2022-03-25T17:59:05 IST" duration-ms="490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T17:59:05 IST" name="testSessionSetUp" finished-at="2022-03-25T17:59:07 IST" duration-ms="2347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectDirectorName(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T17:59:07 IST" name="testMovieMetadataOnWebHasCorrectDirectorName" data-provider="popularMovieTitles" finished-at="2022-03-25T18:00:25 IST" duration-ms="78021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectDirectorName -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:00:25 IST" name="testTearDown" finished-at="2022-03-25T18:00:25 IST" duration-ms="497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:00:25 IST" name="testSessionSetUp" finished-at="2022-03-25T18:00:28 IST" duration-ms="2399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectGenres(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:00:28 IST" name="testMovieMetadataOnWebHasCorrectGenres" data-provider="popularMovieTitles" finished-at="2022-03-25T18:01:32 IST" duration-ms="64478" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectGenres -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:01:32 IST" name="testTearDown" finished-at="2022-03-25T18:01:33 IST" duration-ms="476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:01:33 IST" name="testSessionSetUp" finished-at="2022-03-25T18:01:35 IST" duration-ms="2297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectGenres(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:01:35 IST" name="testMovieMetadataOnWebHasCorrectGenres" data-provider="popularMovieTitles" finished-at="2022-03-25T18:02:41 IST" duration-ms="65505" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <exception class="org.junit.ComparisonFailure">
            <message>
              <![CDATA[expected:<... "Christopher Nolan"[, "David S. Goyer"]]]]><![CDATA[> but was:<... "Christopher Nolan"[]]><![CDATA[]]]]><![CDATA[>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.junit.ComparisonFailure: expected:<... "Christopher Nolan"[, "David S. Goyer"]]]]><![CDATA[> but was:<... "Christopher Nolan"[]]]]><![CDATA[>
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at com.qt.qualithon.test.MovieSearchTest.testMovieMetadataOnWebHasCorrectGenres(MovieSearchTest.java:166)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.junit.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectGenres -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:02:41 IST" name="testTearDown" finished-at="2022-03-25T18:02:41 IST" duration-ms="547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:02:41 IST" name="testSessionSetUp" finished-at="2022-03-25T18:02:44 IST" duration-ms="2379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectMaturityRating(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:02:44 IST" name="testMovieMetadataOnWebHasCorrectMaturityRating" data-provider="popularMovieTitles" finished-at="2022-03-25T18:02:58 IST" duration-ms="14717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMaturityRating -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:02:58 IST" name="testTearDown" finished-at="2022-03-25T18:02:59 IST" duration-ms="639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:02:59 IST" name="testSessionSetUp" finished-at="2022-03-25T18:03:02 IST" duration-ms="2605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectMaturityRating(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:03:02 IST" name="testMovieMetadataOnWebHasCorrectMaturityRating" data-provider="popularMovieTitles" finished-at="2022-03-25T18:03:15 IST" duration-ms="13485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMaturityRating -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:03:15 IST" name="testTearDown" finished-at="2022-03-25T18:03:16 IST" duration-ms="708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:03:16 IST" name="testSessionSetUp" finished-at="2022-03-25T18:03:18 IST" duration-ms="2413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectMovieRatingScore(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:03:18 IST" name="testMovieMetadataOnWebHasCorrectMovieRatingScore" data-provider="popularMovieTitles" finished-at="2022-03-25T18:03:32 IST" duration-ms="13514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMovieRatingScore -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:03:32 IST" name="testTearDown" finished-at="2022-03-25T18:03:32 IST" duration-ms="808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:03:32 IST" name="testSessionSetUp" finished-at="2022-03-25T18:03:35 IST" duration-ms="2510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectMovieRatingScore(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:03:35 IST" name="testMovieMetadataOnWebHasCorrectMovieRatingScore" data-provider="popularMovieTitles" finished-at="2022-03-25T18:03:50 IST" duration-ms="14952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectMovieRatingScore -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:03:50 IST" name="testTearDown" finished-at="2022-03-25T18:03:50 IST" duration-ms="414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:03:50 IST" name="testSessionSetUp" finished-at="2022-03-25T18:03:53 IST" duration-ms="2502" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectReleaseYear(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:03:53 IST" name="testMovieMetadataOnWebHasCorrectReleaseYear" data-provider="popularMovieTitles" finished-at="2022-03-25T18:05:16 IST" duration-ms="83336" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectReleaseYear -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:05:16 IST" name="testTearDown" finished-at="2022-03-25T18:05:17 IST" duration-ms="598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:05:17 IST" name="testSessionSetUp" finished-at="2022-03-25T18:05:19 IST" duration-ms="2314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectReleaseYear(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:05:19 IST" name="testMovieMetadataOnWebHasCorrectReleaseYear" data-provider="popularMovieTitles" finished-at="2022-03-25T18:06:38 IST" duration-ms="79106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectReleaseYear -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:06:38 IST" name="testTearDown" finished-at="2022-03-25T18:06:39 IST" duration-ms="427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:06:39 IST" name="testSessionSetUp" finished-at="2022-03-25T18:06:41 IST" duration-ms="2259" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectWriters(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:06:41 IST" name="testMovieMetadataOnWebHasCorrectWriters" data-provider="popularMovieTitles" finished-at="2022-03-25T18:07:49 IST" duration-ms="68386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectWriters -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:07:49 IST" name="testTearDown" finished-at="2022-03-25T18:07:50 IST" duration-ms="419" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:07:50 IST" name="testSessionSetUp" finished-at="2022-03-25T18:07:52 IST" duration-ms="2351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectWriters(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:07:52 IST" name="testMovieMetadataOnWebHasCorrectWriters" data-provider="popularMovieTitles" finished-at="2022-03-25T18:08:59 IST" duration-ms="67092" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <exception class="org.junit.ComparisonFailure">
            <message>
              <![CDATA[expected:<... "Christopher Nolan"[, "David S. Goyer"]]]]><![CDATA[> but was:<... "Christopher Nolan"[]]><![CDATA[]]]]><![CDATA[>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.junit.ComparisonFailure: expected:<... "Christopher Nolan"[, "David S. Goyer"]]]]><![CDATA[> but was:<... "Christopher Nolan"[]]]]><![CDATA[>
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at com.qt.qualithon.test.MovieSearchTest.testMovieMetadataOnWebHasCorrectWriters(MovieSearchTest.java:142)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.junit.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectWriters -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:08:59 IST" name="testTearDown" finished-at="2022-03-25T18:09:00 IST" duration-ms="411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:09:00 IST" name="testSessionSetUp" finished-at="2022-03-25T18:09:02 IST" duration-ms="2346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testSearchByExactMovieTitleReturnsMovieAsFirstResult(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:09:02 IST" name="testSearchByExactMovieTitleReturnsMovieAsFirstResult" data-provider="popularMovieTitles" finished-at="2022-03-25T18:10:10 IST" duration-ms="68052" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByExactMovieTitleReturnsMovieAsFirstResult -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:10:10 IST" name="testTearDown" finished-at="2022-03-25T18:10:11 IST" duration-ms="549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:10:11 IST" name="testSessionSetUp" finished-at="2022-03-25T18:10:13 IST" duration-ms="2355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testSearchByExactMovieTitleReturnsMovieAsFirstResult(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:10:13 IST" name="testSearchByExactMovieTitleReturnsMovieAsFirstResult" data-provider="popularMovieTitles" finished-at="2022-03-25T18:11:22 IST" duration-ms="68988" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByExactMovieTitleReturnsMovieAsFirstResult -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTest@2053d869]" started-at="2022-03-25T18:11:22 IST" name="testTearDown" finished-at="2022-03-25T18:11:22 IST" duration-ms="496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
      </class> <!-- com.qt.qualithon.test.MovieSearchTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
