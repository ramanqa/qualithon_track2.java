<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-03-25T17:57:20 IST" name="Default suite" finished-at="2022-03-25T18:05:01 IST" duration-ms="460778">
    <groups>
    </groups>
    <test started-at="2022-03-25T17:57:20 IST" name="Default test" finished-at="2022-03-25T18:05:01 IST" duration-ms="460778">
      <class name="com.qt.qualithon.test.MovieSearchTestRT">
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T17:57:20 IST" name="testSessionSetUp" finished-at="2022-03-25T17:57:26 IST" duration-ms="5567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectDirectorName(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T17:57:26 IST" name="testMovieMetadataOnWebHasCorrectDirectorName" data-provider="popularMovieTitles" finished-at="2022-03-25T17:58:18 IST" duration-ms="51916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectDirectorName -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T17:58:18 IST" name="testTearDown" finished-at="2022-03-25T17:58:19 IST" duration-ms="856" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T17:58:19 IST" name="testSessionSetUp" finished-at="2022-03-25T17:58:21 IST" duration-ms="2598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectDirectorName(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T17:58:21 IST" name="testMovieMetadataOnWebHasCorrectDirectorName" data-provider="popularMovieTitles" finished-at="2022-03-25T17:59:13 IST" duration-ms="51591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectDirectorName -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T17:59:13 IST" name="testTearDown" finished-at="2022-03-25T17:59:14 IST" duration-ms="847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T17:59:14 IST" name="testSessionSetUp" finished-at="2022-03-25T17:59:17 IST" duration-ms="3128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectReleaseYear(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T17:59:17 IST" name="testMovieMetadataOnWebHasCorrectReleaseYear" data-provider="popularMovieTitles" finished-at="2022-03-25T18:00:06 IST" duration-ms="49078" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectReleaseYear -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:00:06 IST" name="testTearDown" finished-at="2022-03-25T18:00:07 IST" duration-ms="955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:00:07 IST" name="testSessionSetUp" finished-at="2022-03-25T18:00:10 IST" duration-ms="2653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectReleaseYear(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:00:10 IST" name="testMovieMetadataOnWebHasCorrectReleaseYear" data-provider="popularMovieTitles" finished-at="2022-03-25T18:00:58 IST" duration-ms="48037" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectReleaseYear -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:00:58 IST" name="testTearDown" finished-at="2022-03-25T18:00:59 IST" duration-ms="1029" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:00:59 IST" name="testSessionSetUp" finished-at="2022-03-25T18:01:01 IST" duration-ms="2693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectWriters(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:01:01 IST" name="testMovieMetadataOnWebHasCorrectWriters" data-provider="popularMovieTitles" finished-at="2022-03-25T18:02:06 IST" duration-ms="64666" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectWriters -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:02:06 IST" name="testTearDown" finished-at="2022-03-25T18:02:07 IST" duration-ms="838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:02:07 IST" name="testSessionSetUp" finished-at="2022-03-25T18:02:09 IST" duration-ms="2594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testMovieMetadataOnWebHasCorrectWriters(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:02:09 IST" name="testMovieMetadataOnWebHasCorrectWriters" data-provider="popularMovieTitles" finished-at="2022-03-25T18:03:15 IST" duration-ms="65090" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <exception class="org.junit.ComparisonFailure">
            <message>
              <![CDATA[expected:<... "Christopher Nolan"[, "David S. Goyer"]]]]><![CDATA[> but was:<... "Christopher Nolan"[]]><![CDATA[]]]]><![CDATA[>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.junit.ComparisonFailure: expected:<... "Christopher Nolan"[, "David S. Goyer"]]]]><![CDATA[> but was:<... "Christopher Nolan"[]]]]><![CDATA[>
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at com.qt.qualithon.test.MovieSearchTestRT.testMovieMetadataOnWebHasCorrectWriters(MovieSearchTestRT.java:130)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.junit.ComparisonFailure -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMovieMetadataOnWebHasCorrectWriters -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:03:15 IST" name="testTearDown" finished-at="2022-03-25T18:03:15 IST" duration-ms="866" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:03:15 IST" name="testSessionSetUp" finished-at="2022-03-25T18:03:18 IST" duration-ms="2707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testSearchByExactMovieTitleReturnsMovieAsFirstResult(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:03:18 IST" name="testSearchByExactMovieTitleReturnsMovieAsFirstResult" data-provider="popularMovieTitles" finished-at="2022-03-25T18:04:07 IST" duration-ms="48591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A Clockwork Orange]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByExactMovieTitleReturnsMovieAsFirstResult -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:04:07 IST" name="testTearDown" finished-at="2022-03-25T18:04:08 IST" duration-ms="940" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
        <test-method is-config="true" signature="testSessionSetUp()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:04:08 IST" name="testSessionSetUp" finished-at="2022-03-25T18:04:10 IST" duration-ms="2696" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSessionSetUp -->
        <test-method signature="testSearchByExactMovieTitleReturnsMovieAsFirstResult(java.lang.String)[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:04:10 IST" name="testSearchByExactMovieTitleReturnsMovieAsFirstResult" data-provider="popularMovieTitles" finished-at="2022-03-25T18:05:00 IST" duration-ms="49831" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[The Dark Knight Rises]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchByExactMovieTitleReturnsMovieAsFirstResult -->
        <test-method is-config="true" signature="testTearDown()[pri:0, instance:com.qt.qualithon.test.MovieSearchTestRT@22e357dc]" started-at="2022-03-25T18:05:00 IST" name="testTearDown" finished-at="2022-03-25T18:05:01 IST" duration-ms="943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTearDown -->
      </class> <!-- com.qt.qualithon.test.MovieSearchTestRT -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
